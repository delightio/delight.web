<%# App Page. Nav here. %>
  <div class="row">
    <!-- Sidebar -->
    <div class="span3 sidebar app-session-sidebar">
      <div  class="sidebar-inner">
        <div class="dashboard">


          <div class="dropdown clearfix nav-dropdown">
            <ul class="dropdown-menu" role="menu" aria-labelledby="dropdownMenu">

              <li class="nav-header app-header">
                <a href="<%= app_path(@app) %>"><%= @app.name %></a>
                <% if current_user == @app.account.administrator %>
                  <%= link_to('#', :id => 'app-setup-btn', :class => "btn small-btn") do %>
                    <i class="icon-cog" title="App Setup"></i>
                  <% end %>
                <% else %>
                  <%# Show something to non admin user %>
                  <%= app_admin_user = @app.account.administrator %>
                  <span>By<img src="<%= app_admin_user.image_url ? app_admin_user.image_url : '/images/profile-pic.jpg' %>" width="20" height="20" alt="" class="user-pic"></span>
                  
                <% end %>
              </li>
              <li >

                <div id="session-recorder" class="<%= @app.recording_paused? ? 'idle' : 'recording' %>">
                  <div id="session-recorder-control">
                  <h4>Recording</h4>
                  <span class="toggle-btn" data-toggle="toggle-switch">
                    <span class="on-btn toggle-handle" data-toggle-handler=".on-btn-handler" data-toggle-status="on">ON</span>
                    <span class="off-btn toggle-handle" data-toggle-handler=".off-btn-handler" data-toggle-status="off">OFF</span>
                  </span>
                  </div>
                  <div id="session-recorder-status" class="hidden">
                    <span class="action" id="session-recorder-start-info">Start</span>
                    <span class="action" id="session-recorder-stop-info">Stop</span>
                  </div>
                  <%= link_to("ON", app_update_recording_path(:app_id => @app.id, :state => 'resume', :format => :json), :remote => true, :method => :put, :id => "session-recorder-start", :class => "on-btn-handler toggle-handler hidden" ) %>
                  <%= link_to("OFF", app_update_recording_path(:app_id => @app.id, :state => 'pause', :format => :json), :remote => true, :method => :put, :id => "session-recorder-stop", :class=>"off-btn-handler toggle-handler hidden") %>
                </div><!-- /recorder -->

              </li>
              <li>
                <div class="progress small-progress">
                  <div class="bar" style="width: 60%;<%# update by ruby initially %>"></div>
                </div>
                <div class="plan-info panel"><small class="plan-status"><a href="#">#hours available, #days till renewal</a></small></div>
              </li>
            </ul>
          </div>
        </div>
        <br>

        <div class="sidebar-nav" id="funnel-list">
          <input type="hidden" name="favorite" id="app-view-favorite" />



         <div class="filter-list">
            <div class="dropdown clearfix nav-dropdown">
              <ul class="dropdown-menu" role="menu" aria-labelledby="dropdownMenu">

                <li class="nav-header">Sessions</li>
                <li class="active">
                  <%= link_to(app_path(@app), remote: true) do %>
                    Latest
                    <% count = @app.app_sessions.recorded.processed_after(@last_viewed_at).length %>

                    <span class="badge badge-black pull-right">
                      <%= count %>
                    </span>

                  <% end %>
                </li>

                <li>
                  <%= link_to(app_path(@app, favorited: 1), remote: true) do %>
                    Starred
                    <% count = @app.app_sessions.recorded.favorited.processed_after(@last_viewed_at).length %>

                    <span class="badge badge-black pull-right">
                      <%= count %>
                    </span>

                  <% end %>
                </li>

                <% @app.funnels.each do |funnel| %>
                <li class="dropdown-submenu <% funnel.id == params[:funnel].to_i ? "active" :"" %>">
                  <a tabindex="-1" href="<%= app_path(@app, funnel: funnel) %>" data-remote="true">
                    <%= funnel.name %>
                    <span class="badge badge-warning">
                      <% count = @app.app_sessions.by_funnel(funnel).processed_after(@last_viewed_at).length %>
                      <%= count %>
                    </span>

                  </a>
                  <ul class="dropdown-menu">
                    <li><%= link_to "Edit", [:edit, @app, funnel], class: '', remote: true %></li>
                    <li><%= link_to "Destroy", [@app, funnel], :method => :delete, class: '', data: {confirm: "Are you sure?"} %></li>
                  </ul>
                </li>

                <%end%>
 
              </ul>
            </div>
          </div>

          <hr>

          <ul class="nav filter-actions-nav">
            <li>
              <%= link_to "+ Create a filter", [:new, @app, :funnel], class: 'btn', remote: true %>
            </li>

           <!--  <li>
              <a href="#" id="funnel-edit-link">Edit a filter</a>
            </li>
            -->
          </ul>
        </div><!--sidebar-nav-->
      </div>
     
    </div><!--/span-->

    <!-- App session list -->
    <%= render :partial => "app_sessions_list" %>

  </div><!--/row-->

  <% content_for(:javascript) do %>
    <script>
    // function querySessions() {
    //   $('#app-show-query-form').submit();
    // }

    $(function(){
      $('#funnel-list a').on('click', function(e){
        $(this).closest('ul').find('li').removeClass('active');
        $(this).parent().addClass('active');
      });

    //   var funnelNav = $('#funnel-edit nav');
    //   funnelNav.hide();
    //   $('#funnel-edit-link').on('click', function(e){
    //     funnelNav.toggle("slow");
    //     e.preventDefault();
    //   });
    // });

    //color box
      $(".group-video").colorbox({iframe: true, rel:'group-video', transition:"none", width:"800px", height:"600px"});
      $(".default-open-video").colorbox({iframe: true, rel:'default-group-video', transition:"none", width:"800px", height:"600px", open:true});
      $("#app-show-invite-viewer").colorbox({
        iframe: true,
        transition:"none",
        width:"550px",
        height:"500px"
      });
      $("#app-schedule-recording").colorbox({
        iframe: true,
        transition:"none",
        width:"650px",
        height:"350px",
        onClosed:function() {
          $.get('/apps/<%= @app.id %>.json',
          function(data) {
            $("#num-scheduled-recording").html(data['scheduled_recordings']);
          })
        }
      });

      <% if @setup %>
        $.colorbox({href: "<%= app_setup_path(:app_id => @app.id) %>", iframe: true, transition:"none", width:"600px", height:"450px"});
      <% end %>

      $("#app-setup-btn").colorbox({href: "<%= app_setup_path(:app_id => @app.id) %>", iframe: true, transition:"none", width:"600px", height:"450px"});


      //filter
      // $("#app-show-filter-input").keydown(function(event) {
      //   if (event.which == 13) {
      //     querySessions();
      //     event.preventDefault();
      //   }
      // });
      // $("#app-show-filter-clear").click(function(event) {
      //   $("#app-show-filter-input").attr("value", "");
      //   querySessions();
      // });

      //recorder
      var recorder_status = "<%= @app.recording_paused? ? 'idle':'recording' %>";
      var switch_status = (recorder_status === "idle") ? "off" : "on";
      
      $(".toggle-btn").toggleSwitch( {status:switch_status});
      

      $("#session-recorder-stop")
      .on('ajax:success', function(event, data, status, xhr) {
        if (data["result"] === "success") { //recording ended
          $("#session-recorder").removeClass("recording").addClass("idle");
        } else {
          console.warn("Server:Something is wrong", data)
        }
      })
      .on('ajax:error', function(xhr, status, err){
        // TODO: undo button
        $(".toggle-btn").toggleSwitch('flip');
        console.warn("Network Error", err)
      });


      $("#session-recorder-start")
      .on('ajax:success', function(event, data, status, xhr) {
        if (data["result"] === "success") { //recording begin
          $("#session-recorder").removeClass("idle").addClass("recording");
        } else {
          console.warn("Server: Something is wrong", data)
        }
      })
      .on('ajax:error', function(xhr, status, err){
        // TODO: undo button

        $(".toggle-btn").toggleSwitch('flip');
        console.warn("Network Error", err)
      });


    })
    // function sticky_relocate() {
    //   var window_top = $(window).scrollTop();
    //   var div_top = $('#sticky-anchor').offset().top;
    //   if (window_top > (div_top - 50))
    //     $('#sticky').addClass('stick')
    //   else
    //     $('#sticky').removeClass('stick');
    // }

    // $(function() {
    //   $(window).scroll(sticky_relocate);
    //     sticky_relocate();
    // });
    </script>
  <% end %>

