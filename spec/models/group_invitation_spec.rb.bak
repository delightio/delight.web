require 'spec_helper'

describe GroupInvitation do
  let(:group_invitation) { FactoryGirl(:group_invitation) }
  describe "validation" do
    it "should validate email address" do
      group_invitation.email = '   abc@example.com   ,   bbc@example.com  '
      group_invitation.should have(0).error_on(:email)
      group_invitation.email = 'abc@example.com,'
      group_invitation.should have(0).error_on(:email)
      group_invitation.email = 'abc@exmapl.com,asdfasdfd'
      group_invitation.should have(1).error_on(:email)
      group_invitation.email = 'asdfa, example@exmple.com'
      group_invitation.should have(1).error_on(:email)
      group_invitation.email = 'asdfa, asdf'
      group_invitation.should have(2).error_on(:email)
    end

    it "should create invitation on create" do
      invitations = Invitation.all
      invitations.should have(2).items
      invitations.first.email.should == 'test1@example.com'
      invitations.second.email.should == 'test2@example.com'
      invitations.first.message.should == 'some message'
      invitations.second.message.should == 'some message'
    end

    describe "create invitaiton fail" do
      before(:each) do
        Invitation.stub(:create).and_return(Invitation.create)
        @gi2 = GroupInvitation.create(:app_id => 123,
                                      :email => 'test1@example.com, test2@example.com',
                                      :message => 'some message') # should fail
      end

      it "should return invalid object and error" do
        @gi2.success.should == false
        Invitation.count.should == 0
      end
    end
  end
end
